---
# tasks file for ansible-docker-nginx-rtmp-role

- name: "Configurer le parefeu (ufw)"
  include: configurer_parefeu.yml

- name: "Ajouter l'utilisateur Unix qui exécutera docker/docker-compose"
  user:
    name: "{{ utilisateur_unix }}"
    groups: docker
    append: yes
    shell: /bin/bash
  become: yes
  
- name: "Ajouter les répertoires de configuration nécessaires à nginx-rtmp" 
  file:
    path: "{{ item }}"
    state: directory
  loop: "{{ repertoires_config }}"
  become: yes
  become_user: "{{ utilisateur_unix }}"

- name: "Copier tous les fichiers de config. de nginx-rtmp"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ utilisateur_unix }}"
    mode: "{{ item.mode }}"
  loop:
    - { src: "docker-compose.yml.j2", dest: "/home/{{ utilisateur_unix }}/docker-compose.yml", owner: "{{ utilisateur_unix }}", mode: "0644" }
    - { src: "env.j2", dest: "/home/{{ utilisateur_unix }}/.env", owner: "{{ utilisateur_unix }}", mode: "0644" }
    - { src: "vhost.j2", dest: "/home/{{ utilisateur_unix }}/docker-compose/nginx/nginx.conf", owner: "{{ utilisateur_unix }}", mode: "0644" }
    - { src: "init-letsencrypt.sh.j2", dest: "/home/{{ utilisateur_unix }}/init-letsencrypt.sh", owner: "root", mode: "0755" }
  become: yes

- name: "Déterminer si le certificat SSL existe déjà"
  stat:
    path: "/home/{{ utilisateur_unix }}/docker-compose/certbot/conf/live/{{ aquarium_direct_domaine }}/fullchain.pem"
  register: ssl
  become: yes
 
- name: "Générer le certificat SSL si nécessaire"
  command: ./init-letsencrypt.sh
  args:
    chdir: /home/{{ utilisateur_unix }}
  when: not ssl.stat.exists
  become: yes

# À FAIRE : convertir en handler / redémarrer uniquement si .env a changé
- name: "(Re)démarrer les services via docker-compose"
  docker_compose:
    project_src: "/home/{{ utilisateur_unix }}/"
    state: present
    restarted: yes
  become: yes
  become_user: "{{ utilisateur_unix }}"
